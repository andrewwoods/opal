"
" Opal Project
" VIM Editor Settings for Wordpress
" by Andrew Woods
" Updated 2015 Mar 15 Sun
"
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
"
" Don't edit this file. Instead create .vimrc_wordpress in your home directory
" and read this file with the following line
"
" :source ~/opal/vimrc_wordpress
"
" If you want to change the value, copy the line from this file and change the
" value in your .vimrc_wordpress. This will allow you keep your changes after
" updates.
"
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


source ~/opal/vimrc

"
" --------[ General VIM ]--------
"

" Pattern searches should ignore case
set ignorecase

" Turn on line numbering
set number

" helps you find matching { and ( when you type ) } - if on screen
set showmatch

" Flash when errors occur
set visualbell

" Show the line and column number of the cursor position
set ruler

" Put a message in the status line for insert, replace, and visual modes
set showmode

" Highlight the syntax of a language
syntax on

"
" Highlight columns 82 with DarkGreen background
"
highlight ColorColumn ctermfg=White ctermbg=DarkGreen
call matchadd('ColorColumn', '\%82v.')

"
" Highlight columns 120 and above like an error. It's bad form to have lines longer the 120 characters
"
match ErrorMsg '\%120v.\+'

set autoindent
set smartindent


" Folding Settings
set foldmarker={,} " This makes it work like other programming editors
set foldmethod=marker
set foldlevelstart=1


set listchars=""
set listchars+=tab:Â§Â¬
set listchars+=eol:Â¶
set listchars+=trail:Â¤
set listchars+=extends:Â»
set listchars+=precedes:Â«



"
" --------[ Wordpress Settings ]--------
"

" Handles the settings for indentation
set tabstop=4
set softtabstop=4
set shiftwidth=4

" Determine line endings
set fileformat=unix
set fileformats=unix,dos

" When inserting a tab, dont expand it to spaces
set noexpandtab


"
" --[ Abbreviations ]--
"

" 
" Never write short tags.
" This will make you do the right thing, in case you forget :)
:ab <?= <?php echo ;?>hhha
:ab x_phpe <?php echo ; ?>hhhhha
:ab x_phpoc <?php  ?>hhhha


" Create Function level PHPDoc
":iab x_function
"\<CR>/**
"\<CR><Left> * Short Description
"\<CR><Left> *
"\<CR><Left> * Long Description
"\<CR><Left> *
"\<CR><Left> * @since version
"\<CR><Left> *
"\<CR><Left> * @param  type $name  it does something
"\<CR><Left> * @return type        it does something
"\<CR><Left> */

" Create Class level PHPDoc
:iab x_class /**
\<CR> * A brief one line description of your class
\<CR><Left> *
\<CR><Left> * Describe what your class does at a high level, and how it can help the
\<CR><Left> * user. The functions of your class should have their own phpdoc comments.
\<CR><Left> *
\<CR><Left> *
\<CR><Left> * @package  Example
\<CR><Left> * @author   FIRST_NAME LAST_NAME <author@foobar.com>
\<CR><Left> * @author   SECOND AUTHOR <second_author@foobar.com>
\<CR><Left> * @access   public
\<CR><Left> */


" Create Plugin level PHPDoc
:ab x_plugin /*
\<CR>Plugin name: NAME OF PLUGIN
\<CR>Plugin URI: http://example.com/wp-plugins/plugin-name
\<CR>Version: 1.0
\<CR>Author: FIRSTNAME LASTNAME
\<CR>Author URI: http://authorwebsite.com
\<CR>License: GPL2
\<CR>*/


:ab c_class class NAME extends PARENT{// do something;}
:ab c_define define('VALUE', '');
:ab c_dowhile do {// do stuff} while ( condtion );
:ab c_for for ( $i = 0; $i <= $max; $i++ ) {// do stuff}
:ab c_foreach foreach ( $array_name AS $key => $value ) {// do stuff}
:ab c_function function foo($p1, $p2 = '') {// do something;}
:ab c_if if ( condtion ) {// do stuff}
:ab c_ifelse if ( condtion ) {// do stuff} else {//something else}
:ab c_ifelsif if ( condtion ) {// do stuff} else if ( other_condtion ) {// do other stuff} else {//something else}
:ab c_ifelseif if ( condtion ) {// do stuff} else if ( other_condtion ) {// do other stuff} else {//something else}
:ab c_loop if ( have_posts() ) :while ( have_posts() ) :the_post();// Do stuffendwhile; // end of the loop.else://Sorry! No Resultsendif; // end of the if
:ab c_member public $value = '';
:ab c_method public,protected,private function foo($p1, $p2 = '') {// do something;}
:ab c_switch switch ( $i ) {case 0:	// do stuffbreak;	hicase 1:	// do other stuffbreak;	hidefault:	echo "i equals 2";break;}
:ab c_while while ( condtion ) {// do stuff}
:ab c_value $value = '';

:ab grepfunc !grep -n function %


:source ~/opal/vimrc_html



