"
" Opal Project
" VIM Editor Settings for Laravel
" by Andrew Woods
" Updated 2015 Jun 14 Sun
"
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
"
" Don't edit this file. Instead create .vimrc_laravel in your home directory
" and read this file with the following line
"
" :source ~/opal/vimrc_laravel
"
" If you want to change the value, copy the line from this file and change the
" value in your .vimrc_laravel This will allow you keep your changes after
" updates.
"
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


source ~/opal/vimrc

"
" --------[ General VIM ]--------
"

" Pattern searches should ignore case
set ignorecase

" Turn on line numbering
set number

" helps you find matching { and ( when you type ) } - if on screen
set showmatch

" Flash when errors occur
set visualbell

" Show the line and column number of the cursor position
set ruler

" Put a message in the status line for insert, replace, and visual modes
set showmode

" Highlight the syntax of a language
syntax on

"
" Ideally, lines will be 80 characters or less
"
highlight IdealColumn ctermfg=Black ctermbg=Green
call matchadd('IdealColumn', '\%80v.')

"
" 120 characters is the soft limit. It's up to you to keep your lines under 120
"
highlight SoftColumn ctermfg=Black ctermbg=Yellow
call matchadd('SoftColumn', '\%120v.\+')


set autoindent
set smartindent


" Folding Settings
set foldmarker={,} " This makes it work like other programming editors
set foldmethod=marker
set foldlevelstart=1


set listchars=""
set listchars+=tab:Â§Â¬
set listchars+=eol:Â¶
set listchars+=trail:Â¤
set listchars+=extends:Â»
set listchars+=precedes:Â«



"
" --------[ Javascript Settings ]--------
"

" Handles the settings for indentation
set tabstop=4
set softtabstop=4
set shiftwidth=4

" Determine line endings
set fileformat=unix
set fileformats=unix

" When inserting a tab, expand it to spaces
set expandtab

highlight LeadingTabsAndTrailingWhitespace ctermbg=yellow guibg=yellow
match LeadingTabsAndTrailingWhitespace /^\t\+\|\s\+$/



"
" --[ Abbreviations ]--
"

:ab c_array var value = [];
:ab c_class class Foo{// Your code here}
:ab c_class_extends class Foo extends Parent implements InterfaceName {// Your code here}
:ab c_dowhile do {// do stuff} while ( condtion );
:ab c_for for ($i = 0; $i <= $max; $i++) {// do stuff}
:ab c_foreach foreach ($array_name as $key => $val) {// do stuff}
:ab c_function function foo($p1, $p2){// do something;}
:ab c_if if (condtion) {// do stuff}
:ab c_ifelse if (condtion) {// do stuff} else {//something else}
:ab c_ifelsif if (condtion) {// do stuff} else if (other_condtion) {// do other stuff} else {//something else}
:ab c_ifelseif if (condtion) {// do stuff} else if (other_condtion) {// do other stuff} else {//something else}
:ab c_method abstract final public/protected/private static function foo($p1, $p2){// do something;}
:ab c_namespace  namespace Foo\Bar\subnamespace;
:ab c_switch switch ($i) {case 0:	// do stuffbreak;	hicase 1:	// do other stuffbreak;	hidefault:	echo "i equals 2";break;}
:ab c_throw throw new Exception('This is the message');
:ab c_trycatch try {// do stuff} catch(e) {//something else}
:ab c_use use foo;
:ab c_use_as use Foo as Name;
:ab c_while while (condtion) {// do stuff}
:ab c_value public/protected/private static $value = '';
:ab c_var public/protected/private static $value = '';

:ab grepfunc !grep -n function %


:source ~/opal/vimrc_html

"
" --[ Functions ]--
"

" @TODO add a function that removes trailing whitespace upon saving of buffer


