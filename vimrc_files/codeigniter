"
" Opal Project
" VIM Editor Settings for CodeIgniter
" by Andrew Woods
" Updated 2017 Nov 21 Tue
"
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
"
" Don't edit this file. Instead create .vimrc_codeigniter in your home directory 
" and read this file with the following line
"
" :source ~/opal/vimrc_files/codeigniter
"
" If you want to change the value, copy the line from this file and change the
" value in your .vimrc_codeigniter. This will allow you keep your changes after 
" updates.
"
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 

source ~/opal/vim_functions/spacehi.vim
source ~/opal/vimrc_files/_formatting.vim
source ~/opal/vimrc_files/_ui-settings.vim
source ~/opal/vimrc_files/vimrc
source ~/opal/vimrc_files/html


"
" --------[ General VIM ]--------
"

syntax on


"
" --------[ CodeIgniter Settings ]--------
"

" Handles the settings for indentation
set tabstop=4
set softtabstop=4
set shiftwidth=4


" Insert a tab, don't expand it to spaces
set noexpandtab


"
" --[ Abbreviations ]--
"
	
:ab cw_controller /*** description of package* * @package CafeWorkr * @subpackage Controllers name * @author Andrew Woods <atwoods1@gmail.com>*/
:ab cw_model /** * description of package * * @package CafeWorkr * @subpackage Models name * @author Andrew Woods <atwoods1@gmail.com> */
:ab cw_views /** * description of package * * @package CafeWorkr * @subpackage Views name * @author Andrew Woods <atwoods1@gmail.com> */
	
" 
" Never write short tags. 
" This will make you do the right thing, in case you forget :)
:ab <?= <?php echo ;?>hhha
:ab x_phpe <?php echo ; ?>hhhhha
:ab x_phpoc <?php  ?>hhhha
:ab x_php <?php  
:ab x_eof /* End of file myfile.php *//* Location: ./system/modules/mymodule/myfile.php */ 
:ab x_package /** * description of package * * @package YourPackage * @subpackage Subpackage name * @author firstname lastname <user@host.com> */
:ab x_function /** * Describe your function * * @param string,boolean,integer,float,array,object,mixed,number $one a necessary parameter * @param $two optional an optional value * @return void */

:ab c_class class NAME extends PARENT{// do something;}
:ab c_define define('VALUE', '');
:ab c_dowhile do{// do stuff} while (condtion); 
:ab c_for for ($i = 0; $i <= $max; $i++){// do stuff}
:ab c_foreach foreach ($array_name AS $key => $value){// do stuff}
:ab c_function function foo($p1, $p2 = ''){// do something;}
:ab c_if if (condition){// do something;}
:ab c_ifelse if (condition){// do something;}else{// do something else;}
:ab c_ifelseif if (condition){// do something}elseif (condition){// do something}else{// do something else}
:ab c_ifelsif if (condition){// do something}elseif (condition){// do something}else{// do something else}
:ab c_member public $value = '';
:ab c_method public,protected,private function foo($p1, $p2 = ''){// do something;}
:ab c_switch switch (condition){case 1:  action1;break;default:  stuff;}kk<kkk
:ab c_while while (condition){  // do something;}
:ab c_value $value = '';

"-------------------------------------------------------------------------------
" Functions
"-------------------------------------------------------------------------------

function CheckPhpSyntax()
   let current_file = shellescape(expand('%:p'))
   let command = '!php --syntax-check ' . current_file 
   execute command
endfunction
autocmd BufWritePost,FileWritePost *.php call CheckPhpSyntax()


"
" Turn On Highlights
"
" Copy this function to your vimrc file and uncomment it
" Update the functions it calls, but not its function name
"
"
function! TurnOnHighlights()
	:call HighlightLeadingSpaces()
	:call HighlightTrailingSpaces()

    :call EnableSpaceHighlighting() " Keep this line
endfunction

"
" Turn Off Highlights
"
" Copy this function to your vimrc file and uncomment it
" Update the functions it calls, but not its function name
"
"
function! TurnOffHighlights()
	:call DisableHighlightLeadingSpaces()
	:call DisableHighlightTrailingSpaces()

    :call DisableSpaceHighlighting() " Keep this line
endfunction



"-------------------------------------------------------------------------------
" Section: Commands
"
"  These commands and mapping will be reused no matter which code styling you use
"

