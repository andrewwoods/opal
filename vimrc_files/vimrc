"
" Opal project
" VIM Editor Settings
" by Andrew Woods
" Updated 2017 Nov 21 Tue
"
"-------------------------------------------------------------------------------
"
" Don't edit this file. Instead create .vimrc in your home directory and read
" this file with the following line
"
" :source ~/opal/vimrc
"
" If you want to change the value, copy the line from this file and change the
" value in your .vimrc. This will allow you keep your changes after updates.
"
"-------------------------------------------------------------------------------

" Use VIM settings, rather than Vi
" This is set first because it changes other options as a side effect
set nocompatible


source ~/opal/vim_functions/edit.vim
source ~/opal/vimrc_files/_abbreviations.vim
source ~/opal/vimrc_files/_formatting.vim
source ~/opal/vimrc_files/_ui-settings.vim


"
" GENERAL SETTINGS
"===============================================================================
"


" Handles the settings for indentation
set tabstop=4
set softtabstop=4
set shiftwidth=4

" When inserting a tab, expand it to the appropriate number of spaces
set expandtab


"
" Different ways to write todays date
"
:iab <expr> now_date strftime("%Y %b %d %a")  " 2012 Mar 15 Thu
:iab <expr> now_datetime strftime("%Y %b %d %a %I:%M%p") " 2012 Mar 15 Thu 10:16PM
:iab <expr> epochtime strftime("%s") " 1331874188
:iab <expr> iso_date strftime("%Y-%m-%d") " 2012-03-15
:iab <expr> iso_datetime strftime("%Y-%m-%d %H:%M:%S") " 2012-03-15 22:03:23
:iab <expr> ukdate strftime("%d/%m/%Y") " 15/03/2012
:iab <expr> ukdate_text strftime("%d %B %Y") " 15 March 2012
:iab <expr> usdate strftime("%m/%d/%Y") " 03/15/2012
:iab <expr> usdate_text strftime("%B %d, %Y") " March 15, 2012
:iab <expr> time12 strftime("%I:%M:%S %p") " 10:20:00 PM
:iab <expr> time24 strftime("%H:%M:%S") " 22:20:06



"
" Lorem Ipsum text
"
:ab lorem_text Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
:ab lorem_list * Lorem ipsum dolor sit amet * consectetur adipisicing elit, sed do eiusmod * tempor incididunt ut labore et dolore magna aliqua.
:ab lorem_ul <ul><li>Lorem ipsum dolor sit amet</li><li>consectetur adipisicing elit, sed do eiusmod<li><li>tempor incididunt ut labore et dolore magna aliqua.</li></ul>


"
" Turn On Highlights
"
" Copy this function to your vimrc file and uncomment it
" Update the functions it calls, but not its function name
"
"
function! TurnOnHighlights()
	:call HighlightLeadingSpaces()
	:call HighlightLeadingTabs()
	:call HighlightTrailingSpaces()

    :call EnableSpaceHighlighting()
endfunction

"
" Turn Off Highlights
"
" Copy this function to your vimrc file and uncomment it
" Update the functions it calls, but not its function name
"
"
function! TurnOffHighlights()
	:call DisableHighlightLeadingSpaces()
	:call DisableHighlightLeadingTabs()
	:call DisableHighlightTrailingSpaces()

    :call DisableSpaceHighlighting()
endfunction

:vmap <C-c> :s/^/\\\<\C\R\>/<CR>:nohlsearch<CR>
:vmap <C-A-c> :s/\\<CR[>]//<CR>:nohlsearch<CR>


"
" FUNCTION KEYS
"===============================================================================
"
" The higher nubmer Fn keys are used because they're easier to hold down.
"
" Can't use <F12> because it's used by Dashboard
"
" Can't use <F11> because it's used to show the desktop
"

" Turn paste mode on/off using <F10>
set pastetoggle=<F10>

if !hasmapto('ToggleSpaceHighlights') && maparg("<F9>") == ""
	" Turn the whitespace highlighting on/off
	map <silent> <unique> <F9> :call ToggleSpaceHighlights()<CR>
endif

if !hasmapto('StripTrailingWhitespace') && maparg("<F8>") == ""
	map <silent> <unique> <F8> :call StripTrailingWhitespace()<CR>
endif

if maparg("<F7>") == ""
	" List the available functions
	map <silent> <unique> <F7> :vimgrep function % \| copen<CR>
endif


if maparg("<F6>") == ""
	" List the open buffers
	map <unique> <F6> :ls<CR>
endif

if maparg("<F5>") == ""
	" Go to the next buffer
	map <silent> <unique> <F5> :bnext<CR>
endif

if maparg("<F4>") == ""
	" Go to the previous buffer
	map <silent> <unique> <F4> :bprevious<CR>
endif


