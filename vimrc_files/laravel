"
" Opal Project
" VIM Editor Settings for Laravel
" by Andrew Woods
" Updated 2017 Nov 21 Tue
"
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
"
" Don't edit this file. Instead create .vimrc_laravel in your home directory
" and read this file with the following line
"
" :source ~/opal/vimrc_files/laravel
"
" If you want to change the value, copy the line from this file and change the
" value in your .vimrc_laravel This will allow you keep your changes after
" updates.
"
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


source ~/opal/vimrc_files/_formatting.vim
source ~/opal/vimrc_files/_ui-settings.vim
source ~/opal/vimrc_files/vimrc
source ~/opal/vimrc_files/html

"
" --------[ General VIM ]--------
"

" Highlight the syntax of a language
syntax on


"
" --------[ Javascript Settings ]--------
"

" Handles the settings for indentation
set tabstop=4
set softtabstop=4
set shiftwidth=4


" When inserting a tab, expand it to spaces
set expandtab

"
" --[ Abbreviations ]--
"

:ab c_array var value = [];
:ab c_class class Foo{// Your code here}
:ab c_class_extends class Foo extends Parent implements InterfaceName {// Your code here}
:ab c_dowhile do {// do stuff} while ( condtion );
:ab c_for for ($i = 0; $i <= $max; $i++) {// do stuff}
:ab c_foreach foreach ($array_name as $key => $val) {// do stuff}
:ab c_function function foo($p1, $p2){// do something;}
:ab c_if if (condtion) {// do stuff}
:ab c_ifelse if (condtion) {// do stuff} else {//something else}
:ab c_ifelsif if (condtion) {// do stuff} else if (other_condtion) {// do other stuff} else {//something else}
:ab c_ifelseif if (condtion) {// do stuff} else if (other_condtion) {// do other stuff} else {//something else}
:ab c_method abstract final public/protected/private static function foo($p1, $p2){// do something;}
:ab c_namespace  namespace Foo\Bar\subnamespace;
:ab c_switch switch ($i) {case 0:	// do stuffbreak;	hicase 1:	// do other stuffbreak;	hidefault:	echo "i equals 2";break;}
:ab c_throw throw new Exception('This is the message');
:ab c_trycatch try {// do stuff} catch(e) {//something else}
:ab c_use use foo;
:ab c_use_as use Foo as Name;
:ab c_while while (condtion) {// do stuff}
:ab c_value public/protected/private static $value = '';
:ab c_var public/protected/private static $value = '';

:ab grepfunc !grep -n function %

"
" --[ Functions ]--
"


