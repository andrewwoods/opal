#!/bin/bash

#
# Fit - an fitness / food journal tool
#
# Author: Andrew Woods
#
#

export PAD="    ";


################################################################################
#
#     Utility Functions
#
################################################################################

#
# echo text with padding
#
function e_
{
	echo "${PAD}$1"	
}

#
# echo a blank line 
#
function n_
{
	echo ""	
}

#
# echo text with padding
#
function p_
{
	prompt "${PAD}$1"	
}


#
# Display info about the slide, usually the slide number.
#
function meta_info
{
    p_ "$1"
	spacer 1
}

#
# Display info about the slide, usually the slide number.
#
function show_todo
{
    l_ 
	spacer 1
	p_ "TODO: This still needs to be worked on "
	spacer 1
    l_ 
}

#
# Display Help
#
function show_help
{
	n_
    e_ " h | help - Display this help message"
    e_ " a | add  - Add an entry into the journal"
    # p_ " u | up -  Update  an entry from the journal"
    # p_ " d | delete -  Remove an entry from the journal"
    e_ " l | list -  list all entries from the journal"
	# p_ " p | progress - Demonstrate your progress"
    e_ " q | quit - Exit present"
	n_
}

function add_item
{
	p_ 'Types: '
	p_ 'W = Weight'
	p_ 'S = Sleep'
	p_ 'M = Meal'

	read -p "Enter a type of item> " item_type 

	if [[ $item_type = "W" || $item_type = "w" ]]
	then
		read -p "How Much you do weight (lbs)> " how_much 
		ts=$(date)
		filename=$(get_filename)
		echo "${ts} WEIGHT ${how_much} lbs" | tee -a $filename
	elif [[ $item_type = "S" || $item_type = "s" ]]
	then
		read -p "How much sleep did you get > " how_much 
		ts=$(date)
		filename=$(get_filename)
		echo "${ts} SLEEP ${how_much} " | tee -a $filename
	elif [[ $item_type = "M" || $item_type = "m" ]]
	then
		read -p "What did you eat? > " how_much 
		ts=$(date)
		filename=$(get_filename)
		echo "${ts} MEAL ${how_much} " | tee -a $filename
	elif [[ $item_type = "D" || $item_type = "d" ]]
	then
		read -p "What did you drink? > " how_much 
		ts=$(date)
		filename=$(get_filename)
		echo "${ts} DRINK ${how_much} " | tee -a $filename
	fi
}

function get_filename
{
	echo "$(datadir)/fit.log"
}


function list_items
{
	filename=$(get_filename)
	cat $filename
}

#
# Create a number of blank lines. Default = 1.
#
function spacer
{
	max=1 
	if [[ $1 != "" ]]
	then
		max=$1
	fi

	for (( i=1; i <= $max; i++ ))
	do
		echo ""
	done
}

#
# Create a number of blank lines. Default = 1.
#
function l_ 
{
	max_length=60 
	char="-"
	line=""

	if [[ $1 != "" ]]
	then
		char=$1
	fi

	if [[ $2 != "" ]]
	then
		max_length=$2
	fi

	for (( i=${#PAD}; i <= $max_length; i++ ))
	do
		line+=$char
	done
	e_ $line	
}


################################################################################
#
#    Main Program 
#
################################################################################

source $HOME/opal/bashrc

op=''

clear
show_help

while true 
do
	read -p "> " op

	if [[ $op == 'q' ||  $op == 'quit' ]]
	then
		break
	else

		if [[ $op == 'a'  ||  $op == 'add'  ]]
		then
			add_item
		elif [[ $op == 'h' ||  $op == 'help'  ]]
		then
			show_help	
		elif [[ $op == 'l' ||  $op == 'list'  ]]
		then
			list_items
		elif [[ $op == 'u' ||  $op == 'update'  ]]
		then
			show_todo
		elif [[ $op == 'd' ||  $op == 'delete'  ]]
		then
			show_todo
		fi

		continue
		
	fi

done


